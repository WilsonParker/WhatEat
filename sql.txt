SET SQL_SAFE_UPDATES = 0;

DROP DATABASE IF EXISTS TEAMAH;
CREATE DATABASE IF NOT EXISTS TEAMAH;
USE TEAMAH;

CREATE TABLE GRADE(
	GRADE_NUM INT UNSIGNED auto_increment NOT NULL,
	GRADE_VAL VARCHAR(20) NOT NULL,
	GRADE_ACM INT(10) NOT NULL,		# ACCUMULATED 마일리지 적립률	1 => 1%
	PRIMARY KEY(GRADE_NUM)
);

CREATE TABLE INFO_POSITION(
	INFO_POSITION_NAME VARCHAR(20) NOT NULL,
	INFO_POSITION_CODE VARCHAR(20),
	PRIMARY KEY(INFO_POSITION_CODE)
);

CREATE TABLE MENU(
	MENU_INDEX INT UNSIGNED,
	MENU_NUM INT UNSIGNED auto_increment,
	MENU_NAME VARCHAR(50) NOT NULL,
	PRIMARY KEY(MENU_NUM)
);

CREATE TABLE USERS(
	INFO_INDEX INT UNSIGNED auto_increment not null,
	INFO_ID VARCHAR(20) NOT NULL,
	INFO_PASSWORD VARCHAR(30) NOT NULL,
	INFO_PHONENUM VARCHAR(15),
	INFO_NAME VARCHAR(20) NOT NULL,
	INFO_MILEAGE INT UNSIGNED DEFAULT 0,
	INFO_GRADE int UNSIGNED default 1,
	INFO_EMAIL VARCHAR(30) DEFAULT "",
	INFO_JOINDATE TIMESTAMP DEFAULT NOW(),
	INFO_BIRTH VARCHAR(20) NOT NULL,
	INFO_DONATION INT DEFAULT 0,					# 기부금. 금액에 따라 정렬 상위배치
	INFO_PERMIT VARCHAR(30) DEFAULT "",						# 사업자 번호
	INFO_POSITION VARCHAR(30) DEFAULT 10111110,				# MEMBER:10111110, SELLER:11001110, ADMIN:10101101
	INFO_ADDBOARD_RG VARCHAR(10) NOT NULL DEFAULT "TRUE",
	INFO_DELBOARD_RG VARCHAR(10) NOT NULL DEFAULT "TRUE",
	INFO_MODBOARD_RG VARCHAR(10) NOT NULL DEFAULT "TRUE",
	INFO_ADDSTORE_RG VARCHAR(10) NOT NULL DEFAULT "TRUE",
	INFO_DELSTORE_RG VARCHAR(10) NOT NULL DEFAULT "TRUE",
	INFO_MODSTORE_RG VARCHAR(10) NOT NULL DEFAULT "TRUE",
	INFO_ADDCOMMENT_RG VARCHAR(10) NOT NULL DEFAULT "TRUE",
	INFO_DELCOMMENT_RG VARCHAR(10) NOT NULL DEFAULT "TRUE",
	INFO_MODCOMMENT_RG VARCHAR(10) NOT NULL DEFAULT "TRUE",
	INFO_MODINFO_RG VARCHAR(10) NOT NULL DEFAULT "TRUE",
	PRIMARY KEY(INFO_INDEX,INFO_ID)
);

CREATE TABLE CATEGORY(
	CATEGORY_INDEX INT UNSIGNED auto_increment not null,
	CATEGORY_NAME VARCHAR(30) NOT NULL,
	CATEGORY_FILE VARCHAR(100) NOT NULL,
	CATEGORY_PATH VARCHAR(100) NOT NULL,
    PRIMARY KEY(CATEGORY_INDEX)
); 

CREATE TABLE STORE(
	STORE_INDEX INT UNSIGNED NOT NULL,
	STORE_NUM INT UNSIGNED auto_increment not null,
	STORE_THEME INT UNSIGNED,
    STORE_NAME VARCHAR(50) NOT NULL,
    STORE_SUBSCRIBER VARCHAR(50) NOT NULL,	#등록한사람 이름
    STORE_KIND INT UNSIGNED NOT NULL,
    STORE_CONTENT VARCHAR(500),
	STORE_READCOUNT INT UNSIGNED DEFAULT 0,
	STORE_COMMENTTOTAL INT UNSIGNED DEFAULT 0,
    STORE_SCORE INT UNSIGNED DEFAULT 0,
    STORE_REVIEWER INT UNSIGNED DEFAULT 0,
    STORE_PARTICIPATION VARCHAR(5000) DEFAULT "",
    STORE_FILE VARCHAR(100),
    STORE_PROFILE VARCHAR(100),
    STORE_PATH VARCHAR(100),
    STORE_LOCATION1 VARCHAR(30),
    STORE_LOCATION2 VARCHAR(30),
    STORE_LOCATION3 VARCHAR(30),
    STORE_LOCATION4 VARCHAR(30),
    STORE_OPENTIME VARCHAR(30),
    STORE_CLOSETIME VARCHAR(30),
    STORE_PHONE VARCHAR(15),
    STORE_PACKDELIVERY VARCHAR(30) DEFAULT "",
    STORE_DATE TIMESTAMP DEFAULT NOW(),
    PRIMARY KEY(STORE_NUM)
);

CREATE TABLE FOOD(
	FOOD_INDEX INT UNSIGNED NOT NULL,
	FOOD_NUM INT UNSIGNED auto_increment not null,
    FOOD_NAME VARCHAR(50) NOT NULL,		# 음식 이름 EX) 치즈버거 같은거
	FOOD_PRICE INT UNSIGNED NOT NULL,		
    PRIMARY KEY(FOOD_NUM)
);

CREATE TABLE MILEAGE_HISTORY(
	MILEAGE_INDEX INT UNSIGNED NOT NULL,
	MILEAGE_NUM INT UNSIGNED auto_increment not null,
	MILEAGE_STAT INT,	# 사용내역은 -1, 적립내역은 1
	MILEAGE_AMOUNT INT UNSIGNED ,
	MILEAGE_CONTENT VARCHAR(100) ,	# 내용
	MILEAGE_DATE TIMESTAMP DEFAULT NOW(),
	PRIMARY KEY(MILEAGE_NUM)
);

CREATE TABLE BOARD(
	BOARD_INDEX INT UNSIGNED NOT NULL,
	BOARD_NUM INT UNSIGNED auto_increment,
	BOARD_SEQUENCE INT UNSIGNED NOT NULL DEFAULT 1,	# KIND 마다 새로이 설정됨
	BOARD_KIND INT UNSIGNED NOT NULL,	# 1. 공지사항 2. 이벤트 3. 자주묻는질문  4.문의게시판 5.커뮤니티 6.상점
	BOARD_WRITER VARCHAR(50),
	BOARD_SUBJECT VARCHAR(50),
	BOARD_CONTENT VARCHAR(2000),
	BOARD_COMMENTTOTAL INT UNSIGNED DEFAULT 0,		# 댓글 수
	BOARD_PATH VARCHAR(100),
	BOARD_FILE VARCHAR(100),
	BOARD_READCOUNT INT UNSIGNED DEFAULT 0,
	BOARD_DATE TIMESTAMP DEFAULT NOW(),
	PRIMARY KEY(BOARD_NUM)
);

CREATE TABLE COMMENTS(		# 댓글  OR 리뷰
	COMMENTS_INDEX INT UNSIGNED NOT NULL,
    COMMENTS_NUM INT UNSIGNED auto_increment not null,
	COMMENTS_KIND_BOARD INT UNSIGNED,	# BOARD 와 연결된 댓글
	COMMENTS_KIND_STORE INT UNSIGNED,	# STORE 와 연결된 댓글
    COMMENTS_WRITER VARCHAR(50) NOT NULL,
	COMMENTS_CONTENT VARCHAR(500),
    COMMENTS_SCORE INT UNSIGNED DEFAULT 0,
	COMMENTS_DATE TIMESTAMP DEFAULT NOW(),
	COMMENTS_SUBNUM INT UNSIGNED DEFAULT 1,
	COMMENTS_SUBTOTAL INT UNSIGNED DEFAULT 0,
    PRIMARY KEY(COMMENTS_NUM)
);

CREATE TABLE STAR (		# 즐겨찾기
	STAR_INDEX INT UNSIGNED NOT NULL,
	STAR_NUM INT UNSIGNED auto_increment not null,
	STAR_STORE_NUM INT UNSIGNED not null,
    PRIMARY KEY(STAR_NUM)
);

CREATE TABLE THEME (		# 테마
	THEME_KIND INT UNSIGNED auto_increment,
	THEME_NAME VARCHAR(100),
	THEME_CHILDREN VARCHAR(100),
    PRIMARY KEY(THEME_KIND)
);

ALTER TABLE COMMENTS ADD FOREIGN KEY(COMMENTS_INDEX) REFERENCES BOARD(BOARD_NUM) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE COMMENTS ADD FOREIGN KEY(COMMENTS_KIND_BOARD) REFERENCES BOARD(BOARD_NUM) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE COMMENTS ADD FOREIGN KEY(COMMENTS_KIND_STORE) REFERENCES STORE(STORE_NUM) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE COMMENTS ADD FOREIGN KEY(COMMENTS_SUBNUM) REFERENCES COMMENTS(COMMENTS_NUM) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE BOARD ADD FOREIGN KEY(BOARD_INDEX) REFERENCES USERS(INFO_INDEX) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE STAR ADD FOREIGN KEY(STAR_INDEX) REFERENCES USERS(INFO_INDEX) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE STAR ADD FOREIGN KEY(STAR_STORE_NUM) REFERENCES STORE(STORE_NUM) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE USERS ADD FOREIGN KEY(INFO_GRADE) REFERENCES GRADE(GRADE_NUM) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE USERS ADD FOREIGN KEY(INFO_POSITION) REFERENCES INFO_POSITION(INFO_POSITION_CODE) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE MILEAGE_HISTORY ADD FOREIGN KEY(MILEAGE_INDEX) REFERENCES USERS(INFO_INDEX) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE STORE ADD FOREIGN KEY(STORE_KIND) REFERENCES CATEGORY(CATEGORY_INDEX) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE STORE ADD FOREIGN KEY(STORE_INDEX) REFERENCES USERS(INFO_INDEX) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE MENU ADD FOREIGN KEY(MENU_INDEX) REFERENCES STORE(STORE_NUM) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE FOOD ADD FOREIGN KEY(FOOD_INDEX) REFERENCES MENU(MENU_NUM) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE STORE ADD FOREIGN KEY(STORE_THEME) REFERENCES THEME(THEME_KIND) ON UPDATE CASCADE ON DELETE CASCADE;

SELECT * FROM USERS;
SELECT * FROM STORE;
SELECT * FROM CATEGORY;
SELECT * FROM MENU;
SELECT * FROM BOARD;
SELECT * FROM COMMENTS;
SELECT * FROM MILEAGE_HISTORY;
SELECT * FROM GRADE;
SELECT * FROM FOOD;
SELECT * FROM THEME;
SELECT * FROM STAR;
